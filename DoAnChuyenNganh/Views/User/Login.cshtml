@model DoAnChuyenNganh.Models.NguoiDung
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
@section css {
    <style>
        body {
            padding-top: 200px;
        }

        .form-login {
            max-width: 600px;
            margin: 5px auto 5px;
            padding: 40px;
            border-radius: 10px;
            background-color: #ffffff;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.2);
        }

            .form-login h2 {
                padding: 40px;
                text-align: center;
                margin-bottom: 50px;
                color: #333;
            }

        .form-control {
            border-radius: 5px;
            border: 1px solid #ced4da;
            transition: border-color 0.3s;
        }

            .form-control:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
            }

        .btn-primary {
            width: 30%;
            padding: 12px;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            color: #fff;
            font-weight: bold;
            transition: background-color 0.3s;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .text-muted {
            text-align: center;
            margin-top: 15px;
        }

            .text-muted a {
                color: #007bff;
            }

        .form-group {
            padding: 5px;
        }
    </style>
}
<div class="form-login">
    <h2>Đăng Nhập Tài Khoản</h2>
    @using (Html.BeginForm("Login", "User", FormMethod.Post))
    {
        <div class="form-group">
            @Html.TextBoxFor(model => model.TenDangNhap, new { @class = "form-control", placeholder = "Nhập tên đăng nhập" })
            @Html.ValidationMessageFor(model => model.TenDangNhap, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.TextBoxFor(model => model.MatKhau, new { @class = "form-control", type = "password", placeholder = "Nhập mật khẩu" })
            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
        </div>

        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary">Đăng Nhập</button>
        </div>

        <div class="text-muted">
            <p>Bạn chưa có tài khoản? <a href="@Url.Action("Register", "User")">Đăng Ký</a></p>
        </div>
    }
</div>


<script>
    document.querySelector(".form-login button[type='submit']").addEventListener("click", function (e) {
        e.preventDefault(); // Ngăn chặn gửi form nếu có lỗi
        let isValid = true;

        // Xóa thông báo lỗi cũ
        document.querySelectorAll(".form-group .text-danger").forEach(el => el.remove());

        // Lấy các trường dữ liệu và kiểm tra
        const fields = [
            {
                name: "TenDangNhap",
                label: "Tên đăng nhập",
                value: document.querySelector("[name='TenDangNhap']").value.trim(),
                rules: [
                    { test: val => val !== "", error: "Tên đăng nhập không được để trống." }
                ]
            },
            {
                name: "MatKhau",
                label: "Mật khẩu",
                value: document.querySelector("[name='MatKhau']").value.trim(),
                rules: [
                    { test: val => val !== "", error: "Mật khẩu không được để trống." }
                ]
            }
        ];

        // Kiểm tra các trường
        fields.forEach(field => {
            field.rules.forEach(rule => {
                if (!rule.test(field.value)) {
                    isValid = false; // Nếu có lỗi, không hợp lệ

                    // Tạo thông báo lỗi và thêm vào trường
                    const errorMessage = document.createElement("div");
                    errorMessage.classList.add("text-danger");
                    errorMessage.textContent = rule.error;

                    // Thêm thông báo lỗi vào phần tử chứa trường input
                    const fieldElement = document.querySelector(`[name='${field.name}']`);
                    fieldElement.parentElement.appendChild(errorMessage);
                }
            });
        });

        // Nếu hợp lệ, gửi form
        if (isValid) {
            document.querySelector(".form-login form").submit();
        }
    });

</script>



